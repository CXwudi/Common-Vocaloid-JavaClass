<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>mikufan.cx</groupId>
  <artifactId>common-vocaloid</artifactId>
  <packaging>pom</packaging>
  <!-- a bug exists in github action about using classifiers with SNAPSHOT versions -->
  <!-- https://github.community/t/github-package-registry-as-maven-repo-trouble-uploading-artifact/14226/38 -->
  <version>1.0.4</version>  <!-- remember update module.version and version tag in children as well -->
  <modules>
    <module>../common-vocaloid-entity</module>
    <module>../common-vocaloid-util</module>
    <module>../import-all</module> <!-- this must needed, parent can't use children as dep directly -->
  </modules>
  <prerequisites>
    <maven>3.5.0</maven> <!-- not required but better to add this, good for updating and solving maven problems-->
  </prerequisites>

  <name>Common Vocaloid Java</name>
  <description>
    A shared and public repository for Java program related to Vocaloid and Miku
  </description>
  <contributors>
    <contributor>
      <name>CXwudi</name>
      <roles>
        <role>Project manager</role>
        <role>Main developer</role>
        <role>初音ミクのfan</role>
        <role>ボカロのfan</role>
      </roles>
      <email>charleschen0502@gmail.com</email>
    </contributor>
    <contributor>
      <name>初音ミク</name>
      <roles>
        <role>Singer</role>
        <role>Energy provider</role>
      </roles>
      <organizationUrl>https://ec.crypton.co.jp/pages/prod/vocaloid/mikuv4x</organizationUrl>
    </contributor>
  </contributors>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>11</java.version>
    <module.version>1.0.4</module.version>
    <log4j.version>2.13.3</log4j.version>
    <eclipse-collections.version>10.2.0</eclipse-collections.version>
    <jackson.version>2.11.0</jackson.version>
    <!-- don't skip deploying parent pom, otherwise import-all can't find parent in customers projects -->
    <delombok.output>delombok</delombok.output>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- all children, which will be used by other projects -->
      <dependency>
        <groupId>mikufan.cx</groupId>
        <artifactId>common-vocaloid-entity</artifactId>
        <version>${module.version}</version>
      </dependency>
      <dependency>
        <groupId>mikufan.cx</groupId>
        <artifactId>common-vocaloid-util</artifactId>
        <version>${module.version}</version>
      </dependency>

      <!-- logging -->
      <dependency> <!-- slf4j -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>1.7.28</version>
      </dependency>
      <dependency> <!-- log4j2 -->
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-core</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-slf4j-impl</artifactId>
        <version>${log4j.version}</version>
        <exclusions> <!-- exclude the included slf4j, which uses older version -->
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency> <!-- async logging support-->
        <groupId>com.lmax</groupId>
        <artifactId>disruptor</artifactId>
        <version>3.4.2</version>
      </dependency>

      <!-- honor utils -->
      <dependency>
        <groupId>org.eclipse.collections</groupId>
        <artifactId>eclipse-collections-api</artifactId>
        <version>${eclipse-collections.version}</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.collections</groupId>
        <artifactId>eclipse-collections</artifactId>
        <version>${eclipse-collections.version}</version>
      </dependency>

      <dependency> <!-- jackson -->
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency> <!-- and its standalone annotation, children import this to avoid jackson-databind -->
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency> <!-- and its standalone object mapper -->
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>
      <dependency> <!-- and supports for eclipse collection -->
        <groupId>com.fasterxml.jackson.datatype</groupId>
        <artifactId>jackson-datatype-eclipse-collections</artifactId>
        <version>${jackson.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency> <!-- and support for yaml -->
        <groupId>com.fasterxml.jackson.dataformat</groupId>
        <artifactId>jackson-dataformat-yaml</artifactId>
        <version>${jackson.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.12</version>
      <scope>provided</scope>
    </dependency>

    <!-- test cases -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.6.2</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <pluginManagement>
      <plugins>

        <plugin> <!-- only need this to compiling high version java like 11 or higher -->
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.1</version> <!-- higher version support higher java -->
          <configuration>
            <release>${java.version}</release>
          </configuration>
        </plugin>

        <plugin> <!-- run junit test-->
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M3</version>
        </plugin>

        <!-- generate delomboked sources codes -->
        <!-- should only used by children with source codes -->
        <plugin>
          <groupId>org.projectlombok</groupId>
          <artifactId>lombok-maven-plugin</artifactId>
          <version>1.18.12.0</version> <!-- better be same with dep version, but can't use property because number is slightly different -->
          <executions>
            <execution>
              <id>delombok-sources</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>delombok</goal>
              </goals>
              <configuration>
                <sourceDirectory>src/main/java</sourceDirectory>
                <outputDirectory>${project.build.directory}/${delombok.output}</outputDirectory>
                <addOutputDirectory>false</addOutputDirectory>
                <encoding>UTF-8</encoding>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- copy src/main/resources to delombok sources -->
        <!-- only used by children with resources -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.1.0</version>
          <executions>
            <execution>
              <id>copy-to-lombok-build</id>
              <phase>process-resources</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <resources>
                  <resource>
                    <directory>${project.basedir}/src/main/resources</directory>
                  </resource>
                </resources>
                <outputDirectory>${project.build.directory}/${delombok.output}</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- use custom delombok sources to create sources jar -->
        <!-- as well should only used by children with source codes -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
          <executions>
            <execution>
              <id>generate-delomboked-sources-jar</id>
              <phase>package</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target>
                  <jar destfile="${project.build.directory}/${project.build.finalName}-sources.jar"
                       basedir="${project.build.directory}/${delombok.output}"/>
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- classify the delomboked sources jar to get deployed -->
        <!-- again only children with delomboked sources jar need this -->
        <!-- can't use maven-jar-plugin as it create wrong structure sources jar -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.1.0</version>
          <executions>
            <execution>
              <id>attach-delomboked-sources-jar</id>
              <phase>package</phase>
              <goals>
                <goal>attach-artifact</goal>
              </goals>
              <configuration>
                <artifacts>
                  <artifact>
                    <file>${project.build.directory}/${project.build.finalName}-sources.jar</file>
                    <type>jar</type>
                    <classifier>sources</classifier>
                  </artifact>
                </artifacts>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.2.0</version>
          <executions>
            <execution>
              <id>attach-javadocs</id>
              <goals><goal>jar</goal></goals>
              <configuration>
                <sourcepath>${project.build.directory}/${delombok.output}</sourcepath>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- deploy to github, better update the version before deploying -->
        <!-- this plugin is the default included plugin, so everyone will run this -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>3.0.0-M1</version>
          <executions>
            <execution> <!-- must override the default execution to allow javadoc and sources deployment -->
              <id>default-deploy</id>
              <phase>deploy</phase>
              <goals><goal>deploy</goal></goals>
            </execution>
          </executions>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>

  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub CXwudi Apache Maven Packages</name>
      <url>https://maven.pkg.github.com/CXwudi/common-vocaloid-java</url>
    </repository>
  </distributionManagement>
</project>